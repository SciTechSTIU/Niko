@model STIUApp.Models.Student

@{
    ViewBag.Title = "Edit";
}

<h3>Edit</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

     
    <div class="form-horizontal">
        @{ int countt = 0;
         foreach (var item in Model.Enrollments)
         {
             if (item.Course != null && item.Status == "Completed")
             {
                 countt += item.Course.Credits;
             }
         }
         
         double doubleVal = System.Convert.ToDouble(countt);
         double completion = (doubleVal / 137) * 100;
         int cint = System.Convert.ToInt32(completion);
         
        }


        <h1>@Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName) (@cint % Completed)</h1>
        <h3>@Html.DisplayFor(model => model.StudentID)</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StudentID)

        <div class="form-group">
            @Html.LabelFor(model => model.StudentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Major, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Major, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Major, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Minor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Minor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Minor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Student Info" class="btn btn-default" />
            </div>
        </div>


            </div>

    <div class="form-horizontal">

        <div class="form-group">
            <div class="col-md-10">

                <h3 id="General Education">General Education (@{
                    int count = 0;
                    foreach (var item in Model.Enrollments)
                    {
                        if (item.Course != null && item.Course.Type == "General Education" && item.Status == "Completed") {
                            count += item.Course.Credits;
                        }
                    }} 
                @count out of 35 credits)</h3>
                <table class="table">
                    <tr>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Course Type</th>
                        <th>Status</th>

                    </tr>

                    @foreach (var item in Model.Enrollments)
                    {
  
                        if (item.Course != null && item.Course.Type == "General Education")
                        {
 
                            <tr @{switch (item.Status)
                            {
                                    case "Completed":
                                        @:style="background-color:rgb(186, 245, 186)"
                                        break;
                                    case "Not Taken":
                                        break;
                                    case "Enrolled":
                                         @:style="background-color:rgb(141, 218, 228)"
                                        break;
                                    default:
                                        break;
                            }}>

                                    

                                <td> @Html.DisplayFor(modelItem => item.Course.CourseID) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Title) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Type) </td>
                                <td>
                                    @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            if (item.Status == "Completed")
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed" });
                            }

                            if (item.Status == "Enrolled")
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled" });
                            }

                            if (item.Status == "Not Taken")
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken" });
                            }

                                    }

                                    @using (Html.BeginForm("UpdateEnrollment", "Student", FormMethod.Post, new { id = item.CourseID }))
                                    {
                                        @Html.Hidden("CourseID", item.CourseID)
                                        @Html.Hidden("StudentID", item.StudentID)
                                        @Html.DropDownList("Status", listItems, new { onchange = "this.form.submit();" })
                                    }

                                </td>
                            </tr>
                        }
                    }


                </table>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-10">
                <h3 id="Basic Core">
                    Basic Core (@{
                    int countbc = 0;
                    foreach (var item in Model.Enrollments)
                    {
                        if (item.Course != null && item.Course.Type == "Basic Core" && item.Status == "Completed")
                        {
                            countbc += item.Course.Credits;
                        }
                    }}
                    @countbc out of 30 credits)
                </h3>
                <table class="table">
                    <tr>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Course Type</th>
                        <th>Status</th>

                    </tr>

                    @foreach (var item in Model.Enrollments)
                    {

                        if (item.Course != null && item.Course.Type == "Basic Core")
                        {
                            <tr @{switch (item.Status) { 
                                      case "Completed": @: style="background-color:rgb(186, 245, 186)"
                                      break; 
                                      case "Not Taken": 
                                      break; 
                                      case "Enrolled": @: style="background-color:rgb(141, 218, 228)"
                                      break; 
                                      default: break; }}>


                                <td> @Html.DisplayFor(modelItem => item.Course.CourseID) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Title) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Type) </td>
                                <td>
                                    @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            if (item.Status == "Completed")
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed" });
                            }

                            if (item.Status == "Enrolled")
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled" });
                            }

                            if (item.Status == "Not Taken")
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken" });
                            }

                                    }

                                    @using (Html.BeginForm("UpdateEnrollment", "Student", FormMethod.Post, new { id = item.CourseID }))
                                    {
                                        @Html.Hidden("CourseID", item.CourseID)
                                        @Html.Hidden("StudentID", item.StudentID)
                                        @Html.DropDownList("Status", listItems, new { onchange = "this.form.submit();" })
                                    }

                                </td>
                            </tr>
                        }
                    }


                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <h3 id="Major Requisite">
                    Major Requisite (@{
                    int countmr = 0;
                    foreach (var item in Model.Enrollments)
                    {
                        if (item.Course != null && item.Course.Type == "Major Requisite" && item.Status == "Completed")
                        {
                            countmr += item.Course.Credits;
                        }
                    }}
                    @countmr out of 30 credits)
                </h3>
                <table class="table">
                    <tr>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Course Type</th>
                        <th>Status</th>

                    </tr>

                    @foreach (var item in Model.Enrollments)
                    {

                        if (item.Course != null && item.Course.Type == "Major Requisite")
                        {
                            <tr @{switch (item.Status) { case "Completed": @: style="background-color:rgb(186, 245, 186)"
                                                                      break; case "Not Taken": break; case "Enrolled": @: style="background-color:rgb(141, 218, 228)"
                                                                      break; default: break; }}>

                                <td> @Html.DisplayFor(modelItem => item.Course.CourseID) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Title) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Type) </td>
                                <td>
                                    @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            if (item.Status == "Completed")
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed" });
                            }

                            if (item.Status == "Enrolled")
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled" });
                            }

                            if (item.Status == "Not Taken")
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken" });
                            }

                                    }

                                    @using (Html.BeginForm("UpdateEnrollment", "Student", FormMethod.Post, new { id = item.CourseID }))
                                    {
                                        @Html.Hidden("CourseID", item.CourseID)
                                        @Html.Hidden("StudentID", item.StudentID)
                                        @Html.DropDownList("Status", listItems, new { onchange = "this.form.submit();" })
                                    }

                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-10">
                <h3 id="Major Elective">
                    Major Elective (@{
                    int countme = 0;
                    foreach (var item in Model.Enrollments)
                    {
                        if (item.Course != null && item.Course.Type == "Major Elective" && item.Status == "Completed")
                        {
                            countme += item.Course.Credits;
                        }
                    }}
                    @countme out of 36 credits)
                </h3>
                <table class="table">
                    <tr>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Course Type</th>
                        <th>Status</th>

                    </tr>

                    @foreach (var item in Model.Enrollments)
                    {

                        if (item.Course != null && item.Course.Type == "Major Elective")
                        {
                            <tr @{switch (item.Status) { case "Completed": @: style="background-color:rgb(186, 245, 186)"
                                                                      break; case "Not Taken": break; case "Enrolled": @: style="background-color:rgb(141, 218, 228)"
                                                                      break; default: break; }}>

                                <td> @Html.DisplayFor(modelItem => item.Course.CourseID) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Title) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Type) </td>
                                <td>
                                    @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            if (item.Status == "Completed")
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed" });
                            }

                            if (item.Status == "Enrolled")
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled" });
                            }

                            if (item.Status == "Not Taken")
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken" });
                            }

                                    }

                                    @using (Html.BeginForm("UpdateEnrollment", "Student", FormMethod.Post, new { id = item.CourseID }))
                                    {
                                        @Html.Hidden("CourseID", item.CourseID)
                                        @Html.Hidden("StudentID", item.StudentID)
                                        @Html.DropDownList("Status", listItems, new { onchange = "this.form.submit();" })
                                    }

                                </td>
                            </tr>
                        }
                    }


                </table>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-10">
                <h3 id="Internship">
                    Internship (@{
                    int counti = 0;
                    foreach (var item in Model.Enrollments)
                    {
                        if (item.Course != null && item.Course.Type == "Internship" && item.Status == "Completed")
                        {
                            counti += item.Course.Credits;
                        }
                    }}
                    @counti out of 6 credits)
                </h3>
                <table class="table">
                    <tr>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Course Type</th>
                        <th>Status</th>

                    </tr>

                    @foreach (var item in Model.Enrollments)
                    {

                        if (item.Course != null && item.Course.Type == "Internship")
                        {
                            <tr @{switch (item.Status) { case "Completed": @: style="background-color:rgb(186, 245, 186)"
                                                                      break; case "Not Taken": break; case "Enrolled": @: style="background-color:rgb(141, 218, 228)"
                                                                      break; default: break; }}>
                                <td> @Html.DisplayFor(modelItem => item.Course.CourseID) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Title) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Type) </td>
                                <td>
                                    @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            if (item.Status == "Completed")
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed" });
                            }

                            if (item.Status == "Enrolled")
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled" });
                            }

                            if (item.Status == "Not Taken")
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken" });
                            }

                                    }

                                    @using (Html.BeginForm("UpdateEnrollment", "Student", FormMethod.Post, new { id = item.CourseID }))
                                    {
                                        @Html.Hidden("CourseID", item.CourseID)
                                        @Html.Hidden("StudentID", item.StudentID)
                                        @Html.DropDownList("Status", listItems, new { onchange = "this.form.submit();" })
                                    }

                                </td>
                            </tr>
                        }
                    }


                </table>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-10">
                <h3 id="MKT">
                    Digital Marketing Minor (@{
                    int countmkt = 0;
                    foreach (var item in Model.Enrollments)
                    {
                        if (item.Course != null && item.Course.Type == "MKT" && item.Status == "Completed")
                        {
                            countmkt += item.Course.Credits;
                        }
                    }}
                    @countmkt out of 15 credits)
                </h3>
                <table class="table">
                    <tr>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Course Type</th>
                        <th>Status</th>

                    </tr>

                    @foreach (var item in Model.Enrollments)
                    {

                        if (item.Course != null && item.Course.Type == "MKT")
                        {
                            <tr @{switch (item.Status) { case "Completed": @: style="background-color:rgb(186, 245, 186)"
                                                                      break; case "Not Taken": break; case "Enrolled": @: style="background-color:rgb(141, 218, 228)"
                                                                      break; default: break; }}>
                                <td> @Html.DisplayFor(modelItem => item.Course.CourseID) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Title) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Type) </td>
                                <td>
                                    @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            if (item.Status == "Completed")
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed" });
                            }

                            if (item.Status == "Enrolled")
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled" });
                            }

                            if (item.Status == "Not Taken")
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken" });
                            }

                                    }

                                    @using (Html.BeginForm("UpdateEnrollment", "Student", FormMethod.Post, new { id = item.CourseID }))
                                    {
                                        @Html.Hidden("CourseID", item.CourseID)
                                        @Html.Hidden("StudentID", item.StudentID)
                                        @Html.DropDownList("Status", listItems, new { onchange = "this.form.submit();" })
                                    }

                                </td>
                            </tr>
                        }
                    }


                </table>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-10">
                <h3 id="CMD">
                    Creative Media Design Minor (@{
                    int countcmd = 0;
                    foreach (var item in Model.Enrollments)
                    {
                        if (item.Course != null && item.Course.Type == "CMD" && item.Status == "Completed")
                        {
                            countcmd += item.Course.Credits;
                        }
                    }}
                    @countcmd out of 15 credits)
                </h3>
                <table class="table">
                    <tr>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Course Type</th>
                        <th>Status</th>

                    </tr>

                    @foreach (var item in Model.Enrollments)
                    {

                        if (item.Course != null && item.Course.Type == "CMD")
                        {
                            <tr @{switch (item.Status) { case "Completed": @: style="background-color:rgb(186, 245, 186)"
                                                                      break; case "Not Taken": break; case "Enrolled": @: style="background-color:rgb(141, 218, 228)"
                                                                      break; default: break; }}>
                                <td> @Html.DisplayFor(modelItem => item.Course.CourseID) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Title) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Type) </td>
                                <td>
                                    @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            if (item.Status == "Completed")
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed" });
                            }

                            if (item.Status == "Enrolled")
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled" });
                            }

                            if (item.Status == "Not Taken")
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken" });
                            }

                                    }

                                    @using (Html.BeginForm("UpdateEnrollment", "Student", FormMethod.Post, new { id = item.CourseID }))
                                    {
                                        @Html.Hidden("CourseID", item.CourseID)
                                        @Html.Hidden("StudentID", item.StudentID)
                                        @Html.DropDownList("Status", listItems, new { onchange = "this.form.submit();" })
                                    }

                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>
        </div>



    </div>
}





            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
