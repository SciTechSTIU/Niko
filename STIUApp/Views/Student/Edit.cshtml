@model STIUApp.Models.Student

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StudentID)

        <div class="form-group">
            @Html.LabelFor(model => model.StudentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Major, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Major, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Major, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Minor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Minor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Minor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Student Info" class="btn btn-default" />
            </div>
        </div>


            </div>

    <div class="form-horizontal">

        <div class="form-group">
            <div class="col-md-10">
                <h3>General Education</h3>
                <table class="table">
                    <tr>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Course Type</th>
                        <th>Status</th>

                    </tr>

                                        @foreach (var item in Model.Enrollments)
                    {

                        if (item.Course != null && item.Course.Type == "General Education")
                        {
                            if (item.Status == "Completed") { 
                                @:<tr style="background-color:forestgreen">
                        }

                               <tr>     

                                <td> @Html.DisplayFor(modelItem => item.Course.CourseID) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Title) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Type) </td>
                                <td>
                                    @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            if (item.Status == "Completed")
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed" });
                            }

                            if (item.Status == "Enrolled")
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled" });
                            }

                            if (item.Status == "Not Taken")
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken" });
                            }

                                    }

                                    @using (Html.BeginForm("UpdateEnrollment", "Student", FormMethod.Post, new { id = item.CourseID }))
                                    {
                                        @Html.Hidden("CourseID", item.CourseID)
                                        @Html.Hidden("StudentID", item.StudentID)
                                        @Html.DropDownList("Status", listItems, new { onchange = "this.form.submit();" })
                                    }

                                </td>
                            </tr>
                        }
                    }


                </table>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-10">
                <h3>Basic Core</h3>
                <table class="table">
                    <tr>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Course Type</th>
                        <th>Status</th>

                    </tr>

                    @foreach (var item in Model.Enrollments)
                    {

                        if (item.Course != null && item.Course.Type == "Basic Core")
                        {
                            if (item.Status == "Completed")
                            {
                                @:<tr style="background-color:forestgreen">
                        } <tr>
                                <td> @Html.DisplayFor(modelItem => item.Course.CourseID) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Title) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Type) </td>
                                <td>
                            @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            if (item.Status == "Completed")
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed" });
                            }

                            if (item.Status == "Enrolled")
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled" });
                            }

                            if (item.Status == "Not Taken")
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken" });
                            }

                            }

                                    @using (Html.BeginForm("UpdateEnrollment", "Student", FormMethod.Post, new { id = item.CourseID }))
                                    {
                                        @Html.Hidden("CourseID", item.CourseID)
                                        @Html.Hidden("StudentID", item.StudentID)
                                        @Html.DropDownList("Status", listItems, new { onchange = "this.form.submit();" })
                                    }

                                </td>
                            </tr>
                        }
                    }


                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <h3>Major Requisite</h3>
                <table class="table">
                    <tr>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Course Type</th>
                        <th>Status</th>

                    </tr>

                    @foreach (var item in Model.Enrollments)
                    {

                        if (item.Course != null && item.Course.Type == "Major Requisite")
                        {
                            <tr>
                                <td> @Html.DisplayFor(modelItem => item.Course.CourseID) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Title) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Type) </td>
                                <td>
                                    @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            if (item.Status == "Completed")
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed" });
                            }

                            if (item.Status == "Enrolled")
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled" });
                            }

                            if (item.Status == "Not Taken")
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken" });
                            }

                                    }

                                    @using (Html.BeginForm("UpdateEnrollment", "Student", FormMethod.Post, new { id = item.CourseID }))
                                    {
                                        @Html.Hidden("CourseID", item.CourseID)
                                        @Html.Hidden("StudentID", item.StudentID)
                                        @Html.DropDownList("Status", listItems, new { onchange = "this.form.submit();" })
                                    }

                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-10">
                <h3>Major Elective</h3>
                <table class="table">
                    <tr>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Course Type</th>
                        <th>Status</th>

                    </tr>

                    @foreach (var item in Model.Enrollments)
                    {

                        if (item.Course != null && item.Course.Type == "Major Elective")
                        {
                            <tr>
                                <td> @Html.DisplayFor(modelItem => item.Course.CourseID) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Title) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Type) </td>
                                <td>
                                    @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            if (item.Status == "Completed")
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed" });
                            }

                            if (item.Status == "Enrolled")
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled" });
                            }

                            if (item.Status == "Not Taken")
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken" });
                            }

                                    }

                                    @using (Html.BeginForm("UpdateEnrollment", "Student", FormMethod.Post, new { id = item.CourseID }))
                                    {
                                        @Html.Hidden("CourseID", item.CourseID)
                                        @Html.Hidden("StudentID", item.StudentID)
                                        @Html.DropDownList("Status", listItems, new { onchange = "this.form.submit();" })
                                    }

                                </td>
                            </tr>
                        }
                    }


                </table>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-10">
                <h3>Internship</h3>
                <table class="table">
                    <tr>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Course Type</th>
                        <th>Status</th>

                    </tr>

                    @foreach (var item in Model.Enrollments)
                    {

                        if (item.Course != null && item.Course.Type == "Internship")
                        {
                            <tr>
                                <td> @Html.DisplayFor(modelItem => item.Course.CourseID) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Title) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Type) </td>
                                <td>
                                    @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            if (item.Status == "Completed")
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed" });
                            }

                            if (item.Status == "Enrolled")
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled" });
                            }

                            if (item.Status == "Not Taken")
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken" });
                            }

                                    }

                                    @using (Html.BeginForm("UpdateEnrollment", "Student", FormMethod.Post, new { id = item.CourseID }))
                                    {
                                        @Html.Hidden("CourseID", item.CourseID)
                                        @Html.Hidden("StudentID", item.StudentID)
                                        @Html.DropDownList("Status", listItems, new { onchange = "this.form.submit();" })
                                    }

                                </td>
                            </tr>
                        }
                    }


                </table>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-10">
                <h3>Digital Marketing Minor</h3>
                <table class="table">
                    <tr>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Course Type</th>
                        <th>Status</th>

                    </tr>

                    @foreach (var item in Model.Enrollments)
                    {

                        if (item.Course != null && item.Course.Type == "MKT")
                        {
                            <tr>
                                <td> @Html.DisplayFor(modelItem => item.Course.CourseID) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Title) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Type) </td>
                                <td>
                                    @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            if (item.Status == "Completed")
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed" });
                            }

                            if (item.Status == "Enrolled")
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled" });
                            }

                            if (item.Status == "Not Taken")
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken" });
                            }

                                    }

                                    @using (Html.BeginForm("UpdateEnrollment", "Student", FormMethod.Post, new { id = item.CourseID }))
                                    {
                                        @Html.Hidden("CourseID", item.CourseID)
                                        @Html.Hidden("StudentID", item.StudentID)
                                        @Html.DropDownList("Status", listItems, new { onchange = "this.form.submit();" })
                                    }

                                </td>
                            </tr>
                        }
                    }


                </table>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-10">
                <h3>Creative Media Design Minor</h3>
                <table class="table">
                    <tr>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Course Type</th>
                        <th>Status</th>

                    </tr>

                    @foreach (var item in Model.Enrollments)
                    {

                        if (item.Course != null && item.Course.Type == "CMD")
                        {
                            <tr>
                                <td> @Html.DisplayFor(modelItem => item.Course.CourseID) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Title) </td>
                                <td> @Html.DisplayFor(modelItem => item.Course.Type) </td>
                                <td>
                                    @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            if (item.Status == "Completed")
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Completed", Value = "Completed" });
                            }

                            if (item.Status == "Enrolled")
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Enrolled", Value = "Enrolled" });
                            }

                            if (item.Status == "Not Taken")
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken", Selected = true });
                            }
                            else
                            {
                                listItems.Add(new SelectListItem { Text = "Not Taken", Value = "Not Taken" });
                            }

                                    }

                                    @using (Html.BeginForm("UpdateEnrollment", "Student", FormMethod.Post, new { id = item.CourseID }))
                                    {
                                        @Html.Hidden("CourseID", item.CourseID)
                                        @Html.Hidden("StudentID", item.StudentID)
                                        @Html.DropDownList("Status", listItems, new { onchange = "this.form.submit();" })
                                    }

                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>
        </div>



    </div>
}





            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
